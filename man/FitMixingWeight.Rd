% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scChIX.R
\name{FitMixingWeight}
\alias{FitMixingWeight}
\title{Infer best pair of clusters from a double-incubated cell that maximizes the multinomial log-likelihood}
\usage{
FitMixingWeight(
  cell.count.raw.merged,
  dat.impute.repress.lst,
  dat.impute.active,
  w.init,
  w.lower,
  w.upper,
  jmethod = "Brent"
)
}
\arguments{
\item{cell.count.raw.merged}{vector of raw cell counts from a double-incubated cell.}

\item{dat.impute.repress.lst}{Non-reference histone modification: list object containing cluster-specific probability weights across genomic bins. Each element in list is a probability vector across genomic bins for a cluster.}

\item{dat.impute.active}{Reference histone modification: matrix object where rows are cluster names and columns are genomic bins. Each row is a probability vector across genomic bins.}

\item{w.init}{initial guess for the mixing fraction between the two histone modifications. Mixing fraction is relative to the reference histone modification.}

\item{w.lower}{lower bound for mixing weights, usually 0.}

\item{w.upper}{lower bound for mixing weights, usually 1.}

\item{jmethod}{method for optimizing w. Use "Brent" because it is a 1D problem given two clusters.}
}
\value{
optim output for best pair of clusters (one from an element in dat.impute.repress.lst, other from a row from dat.impute.active).
}
\description{
Infer best pair of clusters from a double-incubated cell that maximizes the multinomial log-likelihood
}
\examples{
data(RawDblCountMatSubset)
cell.count.raw.merged.lst <- as.list(as.data.frame(as.matrix(count.mat.dbl.subset)))
act.repress.coord.lst <- lapply(cell.count.raw.merged.lst, function(cell.count.raw.merged){
  optim.out <- FitMixingWeight(cell.count.raw.merged = cell.count.raw.merged,
                               dat.impute.repress.lst = dat.impute.repress.lst,
                               dat.impute.active = dat.impute.active, w.init = 0.5, w.lower = wlower, w.upper = wupper, jmethod = "Brent")
  ll.mat <- GetLLMerged(optim.out$par, cell.count.raw.merged, dat.impute.repress.lst, dat.impute.active, return.mat = TRUE)
  return(list(ll.mat = ll.mat, w = optim.out$par))
})
}
